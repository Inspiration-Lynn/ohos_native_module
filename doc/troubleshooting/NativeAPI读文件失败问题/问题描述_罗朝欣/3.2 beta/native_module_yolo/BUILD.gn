import("//build/ohos.gni")

ohos_shared_library("yolo") {
  include_dirs = [
    "//third_party/node/src",
    "//foundation/arkui/napi/interfaces/kits",
    # opencv头文件
    "/usr/local/build/oh_3.2/opencv4",
    "//utils/native/base/include"
  
  ]

  libs = [
     "/usr/local/build/oh_3.2/lib/libopencv_gapi.so.4.5.5"          
    ,"/usr/local/build/oh_3.2/lib/libopencv_rgbd.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_alphamat.so.4.5.5"      
    ,"/usr/local/build/oh_3.2/lib/libopencv_hfs.so.4.5.5"                 
    ,"/usr/local/build/oh_3.2/lib/libopencv_saliency.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_aruco.so.4.5.5"         
    ,"/usr/local/build/oh_3.2/lib/libopencv_highgui.so.4.5.5"             
    ,"/usr/local/build/oh_3.2/lib/libopencv_shape.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_barcode.so.4.5.5"       
    ,"/usr/local/build/oh_3.2/lib/libopencv_imgcodecs.so.4.5.5"           
    ,"/usr/local/build/oh_3.2/lib/libopencv_stereo.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_bgsegm.so.4.5.5"        
    ,"/usr/local/build/oh_3.2/lib/libopencv_img_hash.so.4.5.5"            
    ,"/usr/local/build/oh_3.2/lib/libopencv_stitching.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_bioinspired.so.4.5.5"   
    ,"/usr/local/build/oh_3.2/lib/libopencv_imgproc.so.4.5.5"             
    ,"/usr/local/build/oh_3.2/lib/libopencv_structured_light.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_calib3d.so.4.5.5"       
    ,"/usr/local/build/oh_3.2/lib/libopencv_intensity_transform.so.4.5.5" 
    ,"/usr/local/build/oh_3.2/lib/libopencv_superres.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_ccalib.so.4.5.5"        
    ,"/usr/local/build/oh_3.2/lib/libopencv_line_descriptor.so.4.5.5"     
    ,"/usr/local/build/oh_3.2/lib/libopencv_surface_matching.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_core.so.4.5.5"          
    ,"/usr/local/build/oh_3.2/lib/libopencv_mcc.so.4.5.5"                 
    ,"/usr/local/build/oh_3.2/lib/libopencv_text.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_datasets.so.4.5.5"      
    ,"/usr/local/build/oh_3.2/lib/libopencv_ml.so.4.5.5"                  
    ,"/usr/local/build/oh_3.2/lib/libopencv_tracking.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_dnn_objdetect.so.4.5.5" 
    ,"/usr/local/build/oh_3.2/lib/libopencv_objdetect.so.4.5.5"           
    ,"/usr/local/build/oh_3.2/lib/libopencv_videoio.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_dnn.so.4.5.5"           
    ,"/usr/local/build/oh_3.2/lib/libopencv_optflow.so.4.5.5"             
    ,"/usr/local/build/oh_3.2/lib/libopencv_video.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_dnn_superres.so.4.5.5"  
    ,"/usr/local/build/oh_3.2/lib/libopencv_phase_unwrapping.so.4.5.5"    
    ,"/usr/local/build/oh_3.2/lib/libopencv_videostab.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_dpm.so.4.5.5"           
    ,"/usr/local/build/oh_3.2/lib/libopencv_photo.so.4.5.5"               
    ,"/usr/local/build/oh_3.2/lib/libopencv_wechat_qrcode.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_face.so.4.5.5"          
    ,"/usr/local/build/oh_3.2/lib/libopencv_plot.so.4.5.5"                
    ,"/usr/local/build/oh_3.2/lib/libopencv_xfeatures2d.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_features2d.so.4.5.5"    
    ,"/usr/local/build/oh_3.2/lib/libopencv_quality.so.4.5.5"             
    ,"/usr/local/build/oh_3.2/lib/libopencv_ximgproc.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_flann.so.4.5.5"         
    ,"/usr/local/build/oh_3.2/lib/libopencv_rapid.so.4.5.5"               
    ,"/usr/local/build/oh_3.2/lib/libopencv_xobjdetect.so.4.5.5"
    ,"/usr/local/build/oh_3.2/lib/libopencv_fuzzy.so.4.5.5"         
    ,"/usr/local/build/oh_3.2/lib/libopencv_reg.so.4.5.5"                 
    ,"/usr/local/build/oh_3.2/lib/libopencv_xphoto.so.4.5.5"
  ]

  sources = [
    "native_module_yolo.cpp",
    "yolo.cpp",
  ]

  # 指定编译依赖
  deps = [ "//foundation/arkui/napi:ace_napi"]  

  relative_install_dir = "module"

  subsystem_name = "arkui"
  part_name = "napi"

  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
}
